{"version":3,"sources":["assets\\scripts\\player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","type","AudioClip","runJumpAction","jumpUp","tween","by","y","easing","jumpDown","sequence","call","playJumpSound","repeatForever","audioEngine","playEffect","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","onLoad","enabled","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","startMoveAt","pos","node","setPosition","jumpAction","then","start","onDestroy","off","winMaxWidth","winSize","width","update","dt","Math","abs","x"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,         \r\n        // 跳跃音效资源\r\n        jumpAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },      \r\n    },\r\n    runJumpAction () {\r\n        // 跳跃上升\r\n        var jumpUp = cc.tween().by(this.jumpDuration, {y: this.jumpHeight}, {easing: 'sineOut'});\r\n        // 下落\r\n        var jumpDown = cc.tween().by(this.jumpDuration, {y: -this.jumpHeight}, {easing: 'sineIn'});\r\n\r\n        // 创建一个缓动，按 jumpUp、jumpDown 的顺序执行动作 \r\n        // .call 添加一个回调函数，在前面的动作都结束时调用我们定义的 playJumpSound() 方法\r\n        var tween = cc.tween().sequence(jumpUp, jumpDown).call(this.playJumpSound, this);\r\n        // 不断重复\r\n        return cc.tween().repeatForever(tween);\r\n    },\r\n    playJumpSound: function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n    onKeyDown (event) {\r\n        // set a flag when key pressed\r\n        // console.log('down', event.keyCode)\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = true;\r\n                break;\r\n            }\r\n    },\r\n            \r\n    onKeyUp (event) {\r\n        // unset a flag when key released\r\n        // console.log('up', event.keyCode)\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = false;\r\n                break;\r\n        }\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.enabled = false;\r\n        // 初始化跳跃动作\r\n        // var jumpAction = this.runJumpAction();\r\n        // cc.tween(this.node).then(jumpAction).start()\r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n        // 初始化键盘输入监听\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);                   \r\n    },\r\n    startMoveAt: function (pos) {\r\n        this.enabled = true;\r\n        this.xSpeed = 0;\r\n        this.node.setPosition(pos);\r\n        var jumpAction = this.runJumpAction();\r\n        cc.tween(this.node).then(jumpAction).start()        \r\n    },    \r\n    onDestroy () {\r\n        // 取消键盘输入监听\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n    start () {\r\n        this.winMaxWidth=cc.winSize.width/2-this.node.width/2;\r\n    },\r\n\r\n    update (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        }\r\n        else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n\r\n        // 限制主角的速度不能超过最大值\r\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n        // 判断不能超出画布内\r\n        if(Math.abs(this.node.x)>this.winMaxWidth){\r\n            this.node.x=this.winMaxWidth*this.node.x/Math.abs(this.node.x);\r\n        }\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;        \r\n    }\r\n});\r\n"]}