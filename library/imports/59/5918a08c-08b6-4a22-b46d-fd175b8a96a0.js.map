{"version":3,"sources":["assets\\scripts\\btn.js"],"names":["cc","Class","Component","properties","onStartGame","score","scoreDisplay","string","toString","enabled","btnNode","x","player","getComponent","startMoveAt","v2","groundY","spawnNewStar","start","btnClick","event","customEventData","node","target","button","Button","log","name","type"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE,CACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,GAHP;AAqBL;AAEA;AACAC,EAAAA,WAAW,EAAE,uBAAY;AACrB;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,YAAL,CAAkBC,MAAlB,GAA2B,YAAY,KAAKF,KAAL,CAAWG,QAAX,EAAvC,CAHqB,CAIrB;;AACA,SAAKC,OAAL,GAAe,IAAf,CALqB,CAMrB;;AACA,SAAKC,OAAL,CAAaC,CAAb,GAAiB,IAAjB,CAPqB,CAQrB;;AACA,SAAKC,MAAL,CAAYC,YAAZ,CAAyB,QAAzB,EAAmCC,WAAnC,CAA+Cd,EAAE,CAACe,EAAH,CAAM,CAAN,EAAS,KAAKC,OAAd,CAA/C,EATqB,CAUrB;;AACA,SAAKC,YAAL;AACH,GApCI;AAqCLC,EAAAA,KArCK,mBAqCI,CAER,CAvCI;AAwCLC,EAAAA,QAAQ,EAAE,kBAAUC,KAAV,EAAiBC,eAAjB,EAAkC;AACxC;AACA,QAAIC,IAAI,GAAGF,KAAK,CAACG,MAAjB;AACA,QAAIC,MAAM,GAAGF,IAAI,CAACT,YAAL,CAAkBb,EAAE,CAACyB,MAArB,CAAb,CAHwC,CAIxC;;AACAzB,IAAAA,EAAE,CAAC0B,GAAH,CAAO,OAAP,EAAgBJ,IAAI,CAACK,IAArB,EAA2B,SAA3B,EAAsCP,KAAK,CAACQ,IAA5C,EAAkD,QAAlD,EAA4DP,eAA5D;AACH,GA9CI,CA+CL;;AA/CK,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n    onStartGame: function () {\r\n        // 初始化计分\r\n        this.score = 0;\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n        // set game state to running\r\n        this.enabled = true;\r\n        // set button and gameover text out of screen\r\n        this.btnNode.x = 3000;\r\n        // reset player position and move speed\r\n        this.player.getComponent('player').startMoveAt(cc.v2(0, this.groundY));\r\n        // spawn star\r\n        this.spawnNewStar();\r\n    },\r\n    start () {\r\n\r\n    },\r\n    btnClick: function (event, customEventData) {\r\n        //这里 event 是一个 Touch Event 对象，你可以通过 event.target 取到事件的发送节点\r\n        var node = event.target;\r\n        var button = node.getComponent(cc.Button);\r\n        //这里的 customEventData 参数就等于你之前设置的 \"click1 user data\"\r\n        cc.log(\"node=\", node.name, \" event=\", event.type, \" data=\", customEventData);\r\n    }\r\n    // update (dt) {},\r\n});\r\n"]}